name: Test and deploy on prod

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test the project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, sqlite3, pdo_sqlite, bcmath, ctype, fileinfo, json, openssl, tokenizer, zip
          coverage: none

      - name: Install Composer dependencies
        run: composer install

      - name: Create .env file
        run: cp .env.example .env

      - name: Configure SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=$(pwd)/database/database.sqlite" >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run migrations
        run: php artisan migrate

      - name: Run tests
        run: php artisan test
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    steps:
      - name: Mise en fichier de la clé SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa.pem
          chmod 600 ~/.ssh/id_rsa.pem
      - name: Ajout de l'instance dans les hôtes connus
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Connexion SSH, pull et mise à jour du projet
        run: |
          ssh -i ~/.ssh/id_rsa.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /Back-CESI-ZEN

            echo "Git pull..."
            git pull

            echo "Composer install..."
            composer install

            echo "NPM install et build..."
            npm install
            npm run build

            echo "Migrations..."
            php artisan migrate --force

            echo "Permissions storage et cache..."
            chmod -R 777 storage bootstrap/cache

            echo "Reload PHP-FPM..."
            sudo systemctl reload php8.3-fpm

            echo "Déploiement terminé."
          EOF